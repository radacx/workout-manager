<Window x:Class="WorkoutManager.App.Pages.Exercises.Dialogs.ExerciseDialog"
        x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:exercises="clr-namespace:WorkoutManager.Contract.Models.Exercises;assembly=WorkoutManager.Contract"
        xmlns:models1="clr-namespace:WorkoutManager.App.Pages.Exercises.Models"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:dialogs="clr-namespace:WorkoutManager.App.Pages.Exercises.Dialogs"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        d:DataContext="{d:DesignInstance Type=models1:ExerciseDialogViewModel}"
        Height="550" Width="700">
    <StackPanel Background="AliceBlue">
        <StackPanel Orientation="Horizontal">
            <Label Target="{Binding ElementName=ExerciseName}" Content="_Name" />
            
            <TextBox Width="120" Name="ExerciseName" Text="{Binding Exercise.Name}" />
        </StackPanel>  
        
        <StackPanel Orientation="Horizontal">
            <CheckBox
                Name="IsBodyweightExercise"
                IsChecked="{Binding IsBodyweightExercise}"
                Content="Relative bodyweight"
            />
            
            <xctk:DoubleUpDown
                Value="{Binding Exercise.RelativeBodyweight}"
                Minimum="0"
                Maximum="100"
                ClipValueToMinMax="True"
            >
                <xctk:DoubleUpDown.Style>
                    <Style TargetType="xctk:DoubleUpDown">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=IsBodyweightExercise}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </xctk:DoubleUpDown.Style>
            </xctk:DoubleUpDown>
        </StackPanel>
        
        <StackPanel Orientation="Horizontal">
            <Label VerticalAlignment="Center" Content="Contraction type" />
            
            <RadioButton VerticalAlignment="Center" Padding="0 0 10 0" GroupName="ContractionType" Content="Dynamic"
                         IsChecked="{Binding Exercise.ContractionType,
                     Converter={StaticResource DoesEnumMatchConverter},
                        ConverterParameter={x:Static exercises:ContractionType.Dynamic}}" />
            
            <RadioButton VerticalAlignment="Center" GroupName="ContractionType" Content="Isometric"
                         IsChecked="{Binding Exercise.ContractionType,
                     Converter={StaticResource DoesEnumMatchConverter},
                        ConverterParameter={x:Static exercises:ContractionType.Isometric}}" />
        </StackPanel>
        
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            
            <StackPanel
                Grid.Row="0"
                Grid.Column="0"
                Orientation="Horizontal"
            >
                <Label Content="Muscles" />
                
                <ComboBox
                    Name="SelectedMuscle"
                    ItemsSource="{Binding AvailableMuscles}"
                />
                
                <Button
                    Content="Add"
                    Command="{Binding AddMuscle}"
                    CommandParameter="{Binding SelectedItem, ElementName=SelectedMuscle}"
                >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedItem, ElementName=SelectedMuscle,
                            Converter={StaticResource IsValueNullConverter}}" Value="False"
                                >
                                    <Setter Property="IsEnabled" Value="True" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            
            <ItemsControl
                Grid.Row="1"
                Grid.Column="0"
                ItemsSource="{Binding ExercisedMuscles}"
            >
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Muscle}" />
                            <xctk:DoubleUpDown Value="{Binding RelativeEngagement}" Minimum="1" Maximum="100" />
                            <Button Content="Remove" Command="{Binding DataContext.RemoveMuscle,
                            RelativeSource={RelativeSource FindAncestor, AncestorType=dialogs:ExerciseDialog}}"
                                    CommandParameter="{Binding}"
                            />
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </StackPanel>
</Window>
